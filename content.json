{"meta":{"title":"mrl64's Blog","subtitle":"","description":"summer again","author":"liszt_lin","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2021-09-18T01:39:42.000Z","updated":"2021-09-18T01:41:02.269Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-09-18T01:39:20.000Z","updated":"2021-09-18T01:41:26.232Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"About me","date":"2021-09-18T01:53:01.000Z","updated":"2021-09-18T02:31:17.308Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"我是来自fafu21级网安一班的林昊杨。我于21年暑假接触并认识了ctf并产生了极大的兴趣，希望能在大赛上创下佳绩。加入0xfafu实验室后，我将用博客记录自己的学习生活，希望与大家共同进步。"}],"posts":[{"title":"sqli-labs练习 less1","slug":"sqli-labs练习-less1","date":"2021-09-26T08:25:32.000Z","updated":"2021-09-26T13:45:22.827Z","comments":true,"path":"2021/09/26/sqli-labs练习-less1/","link":"","permalink":"http://example.com/2021/09/26/sqli-labs%E7%BB%83%E4%B9%A0-less1/","excerpt":"##前言在学习完php的基本语言和mysql增删查改语句后，我们已经初步具备了靶场练习的能力，在群文件的《web安全方向入门学习计划表》中就提供了靶场的下载途径。让我们先从sqli-labs开始练习SQL注入。 关于SQL注入在练习靶场之前，我们首先要了解什么是SQL注入。SQL注入常常发生在通过网页获取用户输入的数据并将其插入MySQL数据库中，黑客通过把SQL命令插入到域名、web表单等手段达到欺骗服务器的目的，因此网站都会对用户输入的数据进行过滤来进行保护。","text":"##前言在学习完php的基本语言和mysql增删查改语句后，我们已经初步具备了靶场练习的能力，在群文件的《web安全方向入门学习计划表》中就提供了靶场的下载途径。让我们先从sqli-labs开始练习SQL注入。 关于SQL注入在练习靶场之前，我们首先要了解什么是SQL注入。SQL注入常常发生在通过网页获取用户输入的数据并将其插入MySQL数据库中，黑客通过把SQL命令插入到域名、web表单等手段达到欺骗服务器的目的，因此网站都会对用户输入的数据进行过滤来进行保护。 而在练习靶场中，我们就需要通过SQL注入的方式获得数据库中的数据，接下来我们来具体分析sqli-labs靶场中的第一关来深刻认识SQL注入。 less-1首先进入less-1的界面，我们可以看到一行字： Please input the ID as parameter with numeric value 那么我们就按照这句话的意思：请输入ID作为带数值的参数，在域名中输入一个ID：http://127.0.0.1/Less-1/?id=1接着按下回车后我们可以看到页面中出现了一对账号密码： 而根据提示（GET-Error based-Single quotes-String)可以知道，这道关卡是要利用源码中基于单引号的错误来进行解决，那么我们就尝试在域名结尾加上一个&#39;http://127.0.0.1/Less-1/?id=1&#39;回车后我们就可以发现网站报错了，如果没有报错的话，可以参考下面的链接关闭php的引号保护：关于Sqli-labs单引号不报错的问题而如果报错的话，我们会看到以下这段文字： You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1 那么为什么会出现这一段文字呢，我们借助文件的源码进行分析: 123456789101112131415161718192021222324252627282930if(isset($_GET[&#x27;id&#x27;]))&#123;$id=$_GET[&#x27;id&#x27;];//logging the connection parameters to a file for analysis.$fp=fopen(&#x27;result.txt&#x27;,&#x27;a&#x27;);fwrite($fp,&#x27;ID:&#x27;.$id.&quot;\\n&quot;);fclose($fp);// connectivity $sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;$result=mysql_query($sql);$row = mysql_fetch_array($result);if($row) &#123; echo &quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;; echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;]; echo &quot;&lt;br&gt;&quot;; echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;]; echo &quot;&lt;/font&gt;&quot;; &#125; else &#123; echo &#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;; print_r(mysql_error()); echo &quot;&lt;/font&gt;&quot;; &#125;&#125; else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125; 通过分析以上部分源码，我们可以发现，当你输入一个id时，这个文件得到了一个id，if函数执行true下的代码段，将本次查询记录到result的txt文件中，并从数据库中查询，显示信息。因此当我们输入?id=1时网页能够返回账号密码。而当我们输入?id=1’时，我们可以发现，第11行代码得到id为1’后，即把$id替换为1’后，代码中出现了三个单引号，这就将导致单引号无法正确对应，引起报错。 既然多输入了一个单引号，我们就要想办法把多余出来的那个单引号排除掉，在SQL注入中，最常用的方法便是注释，我们在域名最后添加上注释符：http://127.0.0.1/Less-1/?id=1%27--+或者我们可以将–+替换为#（%23） 这样我们发现，回车后的页面重新显示正常，这时我们可以进行测试判断此处是否有注入点。我们可以使用and 1=1和and 1=2进行判断，其中1=1表示恒为真，1=2表示恒为假。通过下两图我们可以发现两者显示页面不同，说明在此处存在注入点： 既然存在注入点，我们就要想办法在此处获取我们需要的数据。由于第11行这句代码本身就是select语句，因此我们在进行查询时需要运用到union语句来合并两个select语句的结果。不过要注意，使用union语句的先决条件是语句内部的SELECT语句必须拥有相同数量的列，因此我们需要先获取表格中的字段数。使用order by语句进行字段数查询，当我们测试到order by 4时，发现文档页面出现了以下的提示： Unknown column ‘4’ in ‘order clause’ 无法识别第4列，这就说明表格中只有3列，我们就可以运用union语句来进行注入。首先我们将id改为-1，接着注入以下代码来获取显示页面对应的字段：union select 1,2,3 可以发现账户与密码两列对应的字段数为2和3，那么在下述的操作中，我们就可以将union语句中的2或3替换成新的select语句来获取我们想要的信息，例如我们可以将上述域名中的2替换为下列代码来查询全部数据库的名称：(select group_concat(schema_name) from information_schema.schemata) 或者使用将2替换为database()查询当前数据库的名称 这样我们就得到了我们要查找的数据库的名称，我们知道，数据存在于数据表里，而数据表又存在于数据库里，所以接下来我们需要获得数据库内所有表的名称。我们可以将原来2的位置继续替换成下列代码进行查询：select group_concat(table_name) from information_schema.tables where table_schema=&#39;数据库名&#39; 取得了表名之后我们就可以想办法获得其中的数据了，数据储存在数据表的列当中，我们需要继续获得列名，这里我们获取users表中的列名，同样替换原来2的位置：select group_concat(column_name) from information_schema.columns where table_schema=&#39;数据库名&#39; and table_name=&#39;表名&#39; 做到这里，我们就可以愉快的获取到我们想要的信息了select group_concat(列名) from 数据库名.数据表名 总结SQL注入第一关的解题流程大致就是这样，实际上，在解题时的关键点就在于找到SQL注入点，只有找到注入点我们才能进行SQL注入，从而获得我们想要的数据。后续的每一关都会有一个提示，我们要根据提示找到那个注入点，找到注入点之后我们就可以一步一步地将数据从数据库中取出。","categories":[{"name":"web","slug":"web","permalink":"http://example.com/categories/web/"}],"tags":[{"name":"-web前端 -mysql","slug":"web前端-mysql","permalink":"http://example.com/tags/web%E5%89%8D%E7%AB%AF-mysql/"}]},{"title":"HTML基础学习","slug":"HTML基础学习","date":"2021-09-22T09:24:52.000Z","updated":"2021-09-22T12:49:43.231Z","comments":true,"path":"2021/09/22/HTML基础学习/","link":"","permalink":"http://example.com/2021/09/22/HTML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/","excerpt":"前言由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。 一、HTML语言语法1.HTML中的语法基本","text":"前言由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。 一、HTML语言语法1.HTML中的语法基本 HTML文件中是以标签对或标签来标记网页结构和显示资料内容的。标签对开始表现为&lt;xxx&gt;,标签结束表现为&lt;/xxx&gt;，其中还有一些标签不需要结束标签，例如&lt;br&gt;和&lt;p&gt;等，这些标签被称为空标签。 而HTML标签也是具有属性的，属性是为HTML元素所提供的说明信息。HTML的属性无先后次序之分，并且属性设置是可选的，如果不进行属性设置的话属性将会以默认值的形式被调用。下例是img图像标签格式：&lt;img src=&quot;http://www.baidu.com/img/baidu.gif&quot; height=&quot;200&quot; width=&quot;100&quot; /&gt;在上述语句中，src为路径，height为高度，width为宽度 在HTML的语法中，HTML标签名和属性都不区分大小写字母，因此，&lt;br&gt;和&lt;BR&gt;还有&lt;Br&gt;三者无任何区别。 HTML源代码中的回车与空格都不会在HTML页面中体现，因此我们需要应用格式标签进行文字排版。 2.HTML注释和所有的编程语言一样，注释不影响代码的运行，善于使用注释也是作为一个程序员应该养成的良好习惯。在HTML语言中，注释的方式比起我们常见的c语言较为特别，注释以&lt;!--开始，以--&gt;结束,举例如下： 12345678&lt;html&gt; &lt;head&gt; &lt;!--注释信息1--&gt; &lt;/head&gt; &lt;body&gt; &lt;!--注释信息2--&gt; &lt;/body&gt;&lt;/html&gt; 3.HTML字符实体有些字符串在HTML语言中具有特殊含义，比如标签中用到的”&lt;””&gt;”等等，这些字符串在HTML中就不可直接输出。而为了输出这些字符串，我们就需要应用字符实体来表示这些字符串.字符实体由”&amp;”、实体名称和”;”构成，以下列出一些常见的实体名称，在使用时要记得在其左右两边加上”&amp;”和”;”： 实体名称 输出字符串 nbsp 空格 amp &amp; lt &lt; gt &gt; quot “ 二、HTML文件结构正如编写C语言时一定需要一个主函数一样，编写HTML时也需要几个全局架构标签，这些标签将HTML代码分为了三个部分进行编写，格式如下： 123456&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; 三个标签对分别为最外层标签，头部标记和文档主体标记，不同的部分起到了不同的作用，接下来我们分别介绍这三个部分。 1.最外层标签&lt;html&gt;和&lt;/html&gt;就是最外层标签，主要作用是告诉浏览器这个HTML文件的开始点与结束点。而由于HTML的不严谨性，只需要存在开始标记HTML文件就可以被浏览器解析。 2.头部标记&lt;head&gt;和&lt;/head&gt;标签为头部标记，在它们之间的文本是头信息。头信息中主要包括页面的一些描述语句，以及引入CSS和JavaScript脚本。在头信息中的标签使用量小于文档主体标记中的标签使用量，主要用来说明文件标题和整体文件的公共属性。 3.文档主体标记&lt;body&gt;和&lt;/body&gt;标签为主体标记，在他们之间的文本用来放置页面中的显示内容。网页呈现出的文字、图片、超链接等等都要在这个标记中进行声明。我们学习的php语言也会嵌套在这个部分。而&lt;body&gt;标签也有自己的属性值，可以设置其标签属性控制整个页面的风格，例如：&lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;red&quot;&gt;以上代码设置了本页面的背景颜色为黑色，字体颜色为红色 在HTML语言中，颜色即可以用英文单词表示，也可以使用RGB来表示 三、页面编辑网页有多种多样的呈现方式，网页中也含有大量元素，本版块将对最基本的文字、图片以及链接的代码进行分析。同时，由于在HTML代码的编写中，经常运用到CSS样式，想要了解CSS样式可以参考以下链接中的CSS基础教程进行学习：CSS教程 1.文字 格式标签在上文中我们提到了格式标签，格式标签一般用于定义网页的布局，下图列举了常用的格式标签： 文本标签文本标签用于强调或特殊说明一些文字，下图列举了常用的文本标签： 2.图像我们常用到的图片格式一般为jpg、png和gif，这些格式的图片通过&lt;img&gt;标签插入到HTML文档中，格式如下：&lt;img src=&quot;&quot; alt=&quot;&quot; width=&quot;&quot; height=&quot;&quot; bordre=&quot;&quot; src：需要指定一个包括URL路径名在内的图片文件 alt：定义一个字符串，当鼠标悬停图片上时输出该字符串 width：设置图像宽度，单位像素 height：设置图像高度，单位像素 border：设置相框的宽度，单位像素 3.链接网页中往往有链接之间的跳转，链接文档中的指定位置被称为锚点。在HTML语言中，&lt;a&gt;标签被用于定义锚点与超链接，语法格式如下：&lt;a href=&quot;&quot; name=&quot;&quot; target=&quot;&quot;&gt;链接文字&lt;/a&gt; href：指定所链接位置的URL路径，绝对路径与相对路径均可 name：指定页面的锚点名称 target：指定打开链接所用的浏览器窗口名称，默认为在当前窗口打开 4.其他在页面呈现中还有其他的形式，例如表格、表单等。本篇博客没有对其进行具体介绍，但我们也要对其具有阅读能力，尤其是在靶场中也经常使用的表格，我们可以参考下列链接进行HTML表格学习：HTML表格教程 总结HTML主要被用来在web上发布信息以及完成简单布局，同时为了页面美观也会运用CSS。在学习php之前对web页面布局有过了解后，可以帮助我们更好地理解代码作用，使自己阅读代码没有障碍。本文总结了常见的HTML语言语法，希望能够在之后的靶场练习中起到参考作用。 资料引用：《PHP学习手册》 ——电子工业出版社","categories":[{"name":"web","slug":"web","permalink":"http://example.com/categories/web/"}],"tags":[{"name":"-web前端 -html","slug":"web前端-html","permalink":"http://example.com/tags/web%E5%89%8D%E7%AB%AF-html/"}]},{"title":"关于新手写博客时的常用md语法","slug":"关于新手写博客时的常用md语法","date":"2021-09-20T14:23:26.000Z","updated":"2021-09-22T13:29:37.868Z","comments":true,"path":"2021/09/20/关于新手写博客时的常用md语法/","link":"","permalink":"http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E6%96%B0%E6%89%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6%E7%9A%84%E5%B8%B8%E7%94%A8md%E8%AF%AD%E6%B3%95/","excerpt":"前言：当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。 一、关于标题","text":"前言：当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。 一、关于标题 当我们需要在markdown编辑器中加入如上（一、关于标题）的大标题时，只需要在标题文字前加上“#”字键并空格。文字前最多可以加上6个“#”键，每加入一个“#”键，标题字号就会小一号，代码如下：# Title 6种标题效果展示： TitleTitleTitleTitleTitleTitle二、关于引用当我们需要对资料进行引用时，我们可以在引用资料前加入“&lt;“键表示对文字进行引用，当然引用中同样可以继续引用，事实上，引用中的文字同样支持md语法。下方代码举例：&gt;word&gt;&gt;word 三、关于文字在markdown语法中同样有字体加粗，倾斜等效果，下方直接展示几种常用的字体效果：###1.斜体*word*word ###2.加粗**word**word ###3.斜体加粗***word***word 注意： 由于会和链接的默认样式产生混淆，markdown语法中无法直接为文字添加下划线，必须使用行内html解决该问题。 需要换行时需要在文字之间空一行。 如果需要分割线则在一个空行中输入三个或以上的“—”或“***”，效果如下： 四、插入代码如果你想在你的博客中编辑一段如上文的代码行，利用好“`”字符，举例如下：如果仅输入一行代码，在代码左右两边写上一个反引号： 如果想要输入代码块的话，在代码块的上一行与下一行写上三个反引号： 五、插入列表如果想在自己的文字前加入一个加粗黑点，即无序列表（如下） 例则只需要在你的文字之前加入“*”键，“+”键或“-”键并空格，例如：* 123+ 123- 123如果需要一个有序列表，则在文字前依次输入“1. ”“2. ”等，例如：1. a2. b3. c a b c 六、插入图片在写博客时，利用图片进行说明的环节是必不可少的。在markdown语法中，插入图片的格式为：![alt](图片地址 &quot;title&quot;)其中alt是在图片下方加入的文字注释，图片地址指的是图片在网络上的地址，因此推荐使用图床上传照片。而title是图片的标题，这部分可省略。例如上文“插入代码”中的图片语法如下：![例1](http://a1.qpic.cn/psc?/V11wVkh94am2Ju/05RlWl8gsTOH*Z17MtCBzHtFtpA*CeMm5FipmaRi.dnX*JxpHe14OqWyfguXnCP3JwMhlxlKCVqeswVw7*6gPA!!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=XQAiAF0AIgARADc!&amp;tl=1&amp;tm=1632150000&amp;sce=0-12-12&amp;rf=0-18.jpg) 七、插入外链外链即超链接，语法形式与插入图片较为相似：[name](链接地址 &quot;title&quot;)其中的name指超链接的显示名称，链接地址即为网址域名，而同样title指的超链接标题，可写可不写，例如：[百度](www.baidu.com)百度 八、插入表格最后要介绍的是表格，表格在一些情况下也是不可或缺的。在markdown语法中，使用“|”来分隔不同的单元格，使用“-”来分隔表头和其他行，格式如下： 123|表头|表头|表头||---|---|---||文字|文字|文字| 表头 表头 表头 文字 文字 文字 小结以上便是我整理的关于使用md语法编写时的常用语法内容，同时这也是我第一次使用md语法进行文本编辑，希望今后我们能熟练掌握更深层次的md语法，让自己的写博客能力更上一层楼。","categories":[{"name":"other","slug":"other","permalink":"http://example.com/categories/other/"}],"tags":[{"name":"-markdown -hexo","slug":"markdown-hexo","permalink":"http://example.com/tags/markdown-hexo/"}]}],"categories":[{"name":"web","slug":"web","permalink":"http://example.com/categories/web/"},{"name":"other","slug":"other","permalink":"http://example.com/categories/other/"}],"tags":[{"name":"-web前端 -mysql","slug":"web前端-mysql","permalink":"http://example.com/tags/web%E5%89%8D%E7%AB%AF-mysql/"},{"name":"-web前端 -html","slug":"web前端-html","permalink":"http://example.com/tags/web%E5%89%8D%E7%AB%AF-html/"},{"name":"-markdown -hexo","slug":"markdown-hexo","permalink":"http://example.com/tags/markdown-hexo/"}]}