<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mrl64&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-27T14:00:24.221Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>liszt_lin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqli-labs练习-less2-4</title>
    <link href="http://example.com/2021/09/27/sqli-labs%E7%BB%83%E4%B9%A0-less2-4/"/>
    <id>http://example.com/2021/09/27/sqli-labs%E7%BB%83%E4%B9%A0-less2-4/</id>
    <published>2021-09-27T12:44:02.000Z</published>
    <updated>2021-09-27T14:00:24.221Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在进行了less-1的靶场练习后，我们就有了完成前4个靶场的能力，只要仔细看好报错语句以及提示，相信less2-4完全不会难住我们。</p></blockquote><h1 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h1><p>又看到了那段熟悉的提示，依旧十分愉快地输入上id，也十分愉快地看到了熟悉的账户密码。但是我们再次注入单引号时，发现了这次的报错提示与less-1不一样了。<br>less-1输入单引号后的报错：</p><ul><li>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1</li></ul><p>less-2输入单引号后的报错：</p><ul><li>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’ LIMIT 0,1’ at line 1</li></ul><span id="more"></span><p>我们发现引号之中的’1’不见了，再结合第二关的提示（GET-Error based-Intiger based），我们就可以知道在这一关中的sql查询代码中原本id两边的单引号不见了，我们去翻阅下源代码，果不其然：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure><p>既然源代码中id没有了单引号，那么我们就可以直接对其进行注入，如果不放心，我们可以用<code>and 1=1</code>和<code>and 1=2</code>来进行验证。验证成功后，我们就可以进行愉快的爆库流程了:<br><img src="https://i.loli.net/2021/09/27/bWogKnu5CxMd4HI.png"></p><h1 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h1><p>同样的配方，同样的味道，那我们也先使用同样的方式，加上熟悉的单引号后，我们发现这次的报错多了一个新同学：</p><ul><li>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’) LIMIT 0,1’ at line 1</li></ul><p>是括号，他加了括号。已经做了两个靶场的我们，相信已经对那段sql查询代码十分熟悉了，注入的关键点就在那段&amp;id=’id’中。我们将1’带入，发现变量变成了&amp;id=’1’’,这时根据报错我们可以发现引号的右边多出了一个），我们就可以推断本题的查询代码应该为：<br><code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code></p><p>查看了源码后，果然如此，那么分析出了代码，那么这题的注入就十分简单了，我们只需要在单引号后补充一个“）”，并将后面的内容注释掉，我们就可以进行熟练的爆库了。<br><img src="https://i.loli.net/2021/09/27/xocBKpOmCATIgSr.png"></p><h1 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h1><p>这次我们发现提示他变了，他从我们的老朋友single quotes变成了double quotes，其实也就是把单引号注入变成了双引号注入，该怎么样还是换汤不换药。既然提示都说了如此，我们这次将单引号换成双引号后进行注入，发现报错如下：</p><ul><li>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘“1””) LIMIT 0,1’ at line 1</li></ul><p>换汤不换药，本关中的报错同上一关只是有几个单引号变成了双引号，那就说明只要我们加上一个右括号并注释后面的内容后就可以进行注入了。在爆库之前，我们把源码拿出来分析一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$id = &#x27;&quot;&#x27; . $id . &#x27;&quot;&#x27;;</span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure><p>第一行代码的意思就是&amp;id=”id”,我们可以把这关的查询语句看成<code>$sql=&quot;SELECT * FROM users WHERE id=(&quot;id&quot;) LIMIT 0,1;</code>,这样我们就可以很好的理解本关的注入原理了。<br>分析完毕，爆库。<br><img src="https://i.loli.net/2021/09/27/vCE83o4WDuNLY9K.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>经历了四个靶场的洗礼，我们已经基本掌握了SQL注入的最基本原理与方法。在之后靶场的练习中，我们将学习更多更复杂的注入方式，我们要做好记录，认真研究，及时复习，继续学习相关知识，拓宽自己。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在进行了less-1的靶场练习后，我们就有了完成前4个靶场的能力，只要仔细看好报错语句以及提示，相信less2-4完全不会难住我们。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;less-2&quot;&gt;&lt;a href=&quot;#less-2&quot; class=&quot;headerlink&quot; title=&quot;less-2&quot;&gt;&lt;/a&gt;less-2&lt;/h1&gt;&lt;p&gt;又看到了那段熟悉的提示，依旧十分愉快地输入上id，也十分愉快地看到了熟悉的账户密码。但是我们再次注入单引号时，发现了这次的报错提示与less-1不一样了。&lt;br&gt;less-1输入单引号后的报错：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;less-2输入单引号后的报错：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’ LIMIT 0,1’ at line 1&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="-web前端 -mysql" scheme="http://example.com/tags/web%E5%89%8D%E7%AB%AF-mysql/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs练习 less1</title>
    <link href="http://example.com/2021/09/26/sqli-labs%E7%BB%83%E4%B9%A0-less1/"/>
    <id>http://example.com/2021/09/26/sqli-labs%E7%BB%83%E4%B9%A0-less1/</id>
    <published>2021-09-26T08:25:32.000Z</published>
    <updated>2021-09-27T14:00:36.082Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习完php的基本语言和mysql增删查改语句后，我们已经初步具备了靶场练习的能力，在群文件的《web安全方向入门学习计划表》中就提供了靶场的下载途径。让我们先从sqli-labs开始练习SQL注入。</p></blockquote><h1 id="关于SQL注入"><a href="#关于SQL注入" class="headerlink" title="关于SQL注入"></a>关于SQL注入</h1><p>在练习靶场之前，我们首先要了解什么是SQL注入。SQL注入常常发生在通过网页获取用户输入的数据并将其插入MySQL数据库中，黑客通过把SQL命令插入到域名、web表单等手段达到欺骗服务器的目的，因此网站都会对用户输入的数据进行过滤来进行保护。</p><span id="more"></span><p>而在练习靶场中，我们就需要通过SQL注入的方式获得数据库中的数据，接下来我们来具体分析sqli-labs靶场中的第一关来深刻认识SQL注入。</p><h1 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h1><p>首先进入less-1的界面，我们可以看到一行字：</p><ul><li>Please input the ID as parameter with numeric value</li></ul><p>那么我们就按照这句话的意思：请输入ID作为带数值的参数，在域名中输入一个ID：<br><code>http://127.0.0.1/Less-1/?id=1</code><br>接着按下回车后我们可以看到页面中出现了一对账号密码：<br><img src="https://i.loli.net/2021/09/26/8K3qmxVOuobTEfN.png"></p><p>而根据提示（GET-Error based-Single quotes-String)可以知道，这道关卡是要利用源码中基于单引号的错误来进行解决，那么我们就尝试在域名结尾加上一个<code>&#39;</code><br><code>http://127.0.0.1/Less-1/?id=1&#39;</code><br>回车后我们就可以发现网站报错了，如果没有报错的话，可以参考下面的链接关闭php的引号保护：<br><a href="https://blog.csdn.net/qq_44700119/article/details/107130976">关于Sqli-labs单引号不报错的问题</a><br>而如果报错的话，我们会看到以下这段文字：</p><ul><li>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1</li></ul><p>那么为什么会出现这一段文字呢，我们借助文件的源码进行分析:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;id&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[&#x27;id&#x27;];</span><br><span class="line">//logging the connection parameters to a file for analysis.</span><br><span class="line">$fp=fopen(&#x27;result.txt&#x27;,&#x27;a&#x27;);</span><br><span class="line">fwrite($fp,&#x27;ID:&#x27;.$id.&quot;\n&quot;);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line">// connectivity </span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">  echo &quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;;</span><br><span class="line">  echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;];</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;];</span><br><span class="line">  echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">echo &#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line">echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br></pre></td></tr></table></figure><p>通过分析以上部分源码，我们可以发现，当你输入一个id时，这个文件得到了一个id，if函数执行true下的代码段，将本次查询记录到result的txt文件中，并从数据库中查询，显示信息。因此当我们输入?id=1时网页能够返回账号密码。而当我们输入?id=1’时，我们可以发现，第11行代码得到id为1’后，即把$id替换为1’后，代码中出现了三个单引号，这就将导致单引号无法正确对应，引起报错。</p><p>既然多输入了一个单引号，我们就要想办法把多余出来的那个单引号排除掉，在SQL注入中，最常用的方法便是注释，我们在域名最后添加上注释符：<br><code>http://127.0.0.1/Less-1/?id=1%27--+</code><br>或者我们可以将–+替换为#（%23）</p><p>这样我们发现，回车后的页面重新显示正常，这时我们可以进行测试判断此处是否有注入点。我们可以使用<code>and 1=1</code>和<code>and 1=2</code>进行判断，其中<code>1=1</code>表示恒为真，<code>1=2</code>表示恒为假。通过下两图我们可以发现两者显示页面不同，说明在此处存在注入点：<br><img src="https://i.loli.net/2021/09/26/auv2h4DXMHigRqt.png"><br><img src="https://i.loli.net/2021/09/26/9rthv6QVWblSOzA.png"></p><p>既然存在注入点，我们就要想办法在此处获取我们需要的数据。由于第11行这句代码本身就是select语句，因此我们在进行查询时需要运用到union语句来合并两个select语句的结果。不过要注意，使用union语句的先决条件是语句内部的SELECT语句必须拥有相同数量的列，因此我们需要先获取表格中的字段数。<br>使用order by语句进行字段数查询，当我们测试到order by 4时，发现文档页面出现了以下的提示：</p><ul><li>Unknown column ‘4’ in ‘order clause’</li></ul><p>无法识别第4列，这就说明表格中只有3列，我们就可以运用union语句来进行注入。首先我们将id改为-1，接着注入以下代码来获取显示页面对应的字段：<br><code>union select 1,2,3</code><br><img src="https://i.loli.net/2021/09/26/PMbsNQHaROnEZc9.png"></p><p>可以发现账户与密码两列对应的字段数为2和3，那么在下述的操作中，我们就可以将union语句中的2或3替换成新的select语句来获取我们想要的信息，例如我们可以将上述域名中的2替换为下列代码来查询全部数据库的名称：<br><code>(select group_concat(schema_name) from information_schema.schemata)</code><br><img src="https://i.loli.net/2021/09/26/WmAuCIDX4VysM6j.png"></p><p>或者使用将2替换为database()查询当前数据库的名称<br><img src="https://i.loli.net/2021/09/26/8vkTrepH9uSQPVy.png"></p><p>这样我们就得到了我们要查找的数据库的名称，我们知道，数据存在于数据表里，而数据表又存在于数据库里，所以接下来我们需要获得数据库内所有表的名称。我们可以将原来2的位置继续替换成下列代码进行查询：<br><code>select group_concat(table_name) from information_schema.tables where table_schema=&#39;数据库名&#39; </code><br><img src="https://i.loli.net/2021/09/26/adIDCEl3B6UpXvN.png"></p><p>取得了表名之后我们就可以想办法获得其中的数据了，数据储存在数据表的列当中，我们需要继续获得列名，这里我们获取users表中的列名，同样替换原来2的位置：<br><code>select group_concat(column_name) from information_schema.columns where table_schema=&#39;数据库名&#39; and table_name=&#39;表名&#39; </code><br><img src="https://i.loli.net/2021/09/26/tdTSe6EAu4skVJg.png"></p><p>做到这里，我们就可以愉快的获取到我们想要的信息了<br><code>select group_concat(列名) from 数据库名.数据表名</code><br><img src="https://i.loli.net/2021/09/26/FPsWJKguSoXb1Iy.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>SQL注入第一关的解题流程大致就是这样，实际上，在解题时的关键点就在于找到SQL注入点，只有找到注入点我们才能进行SQL注入，从而获得我们想要的数据。后续的每一关都会有一个提示，我们要根据提示找到那个注入点，找到注入点之后我们就可以一步一步地将数据从数据库中取出。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在学习完php的基本语言和mysql增删查改语句后，我们已经初步具备了靶场练习的能力，在群文件的《web安全方向入门学习计划表》中就提供了靶场的下载途径。让我们先从sqli-labs开始练习SQL注入。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;关于SQL注入&quot;&gt;&lt;a href=&quot;#关于SQL注入&quot; class=&quot;headerlink&quot; title=&quot;关于SQL注入&quot;&gt;&lt;/a&gt;关于SQL注入&lt;/h1&gt;&lt;p&gt;在练习靶场之前，我们首先要了解什么是SQL注入。SQL注入常常发生在通过网页获取用户输入的数据并将其插入MySQL数据库中，黑客通过把SQL命令插入到域名、web表单等手段达到欺骗服务器的目的，因此网站都会对用户输入的数据进行过滤来进行保护。&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="-web前端 -mysql" scheme="http://example.com/tags/web%E5%89%8D%E7%AB%AF-mysql/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础学习</title>
    <link href="http://example.com/2021/09/22/HTML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/09/22/HTML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-09-22T09:24:52.000Z</published>
    <updated>2021-09-22T12:49:43.231Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。</p></blockquote><h1 id="一、HTML语言语法"><a href="#一、HTML语言语法" class="headerlink" title="一、HTML语言语法"></a>一、HTML语言语法</h1><h2 id="1-HTML中的语法基本"><a href="#1-HTML中的语法基本" class="headerlink" title="1.HTML中的语法基本"></a>1.HTML中的语法基本</h2><span id="more"></span> <ul><li><p>HTML文件中是以标签对或标签来标记网页结构和显示资料内容的。标签对开始表现为<code>&lt;xxx&gt;</code>,标签结束表现为<code>&lt;/xxx&gt;</code>，其中还有一些标签不需要结束标签，例如<code>&lt;br&gt;</code>和<code>&lt;p&gt;</code>等，这些标签被称为空标签。</p></li><li><p>而HTML标签也是具有属性的，属性是为HTML元素所提供的说明信息。HTML的属性无先后次序之分，并且属性设置是可选的，如果不进行属性设置的话属性将会以默认值的形式被调用。下例是img图像标签格式：<br><code>&lt;img src=&quot;http://www.baidu.com/img/baidu.gif&quot; height=&quot;200&quot; width=&quot;100&quot; /&gt;</code><br>在上述语句中，src为路径，height为高度，width为宽度</p></li><li><p>在HTML的语法中，HTML标签名和属性都不区分大小写字母，因此，<code>&lt;br&gt;</code>和<code>&lt;BR&gt;</code>还有<code>&lt;Br&gt;</code>三者无任何区别。</p></li><li><p>HTML源代码中的回车与空格都不会在HTML页面中体现，因此我们需要应用格式标签进行文字排版。</p></li></ul><h2 id="2-HTML注释"><a href="#2-HTML注释" class="headerlink" title="2.HTML注释"></a>2.HTML注释</h2><p>和所有的编程语言一样，注释不影响代码的运行，善于使用注释也是作为一个程序员应该养成的良好习惯。在HTML语言中，注释的方式比起我们常见的c语言较为特别，注释以<code>&lt;!--</code>开始，以<code>--&gt;</code>结束,举例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;!--注释信息1--&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;!--注释信息2--&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="3-HTML字符实体"><a href="#3-HTML字符实体" class="headerlink" title="3.HTML字符实体"></a>3.HTML字符实体</h2><p>有些字符串在HTML语言中具有特殊含义，比如标签中用到的”&lt;””&gt;”等等，这些字符串在HTML中就不可直接输出。而为了输出这些字符串，我们就需要应用字符实体来表示这些字符串.字符实体由”&amp;”、实体名称和”;”构成，以下列出一些常见的实体名称，在使用时要记得在其左右两边加上”&amp;”和”;”：</p><table><thead><tr><th>实体名称</th><th>输出字符串</th></tr></thead><tbody><tr><td>nbsp</td><td>空格</td></tr><tr><td>amp</td><td>&amp;</td></tr><tr><td>lt</td><td>&lt;</td></tr><tr><td>gt</td><td>&gt;</td></tr><tr><td>quot</td><td>“</td></tr></tbody></table><h1 id="二、HTML文件结构"><a href="#二、HTML文件结构" class="headerlink" title="二、HTML文件结构"></a>二、HTML文件结构</h1><p>正如编写C语言时一定需要一个主函数一样，编写HTML时也需要几个全局架构标签，这些标签将HTML代码分为了三个部分进行编写，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>三个标签对分别为最外层标签，头部标记和文档主体标记，不同的部分起到了不同的作用，接下来我们分别介绍这三个部分。</p><h2 id="1-最外层标签"><a href="#1-最外层标签" class="headerlink" title="1.最外层标签"></a>1.最外层标签</h2><p><code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>就是最外层标签，主要作用是告诉浏览器这个HTML文件的开始点与结束点。而由于HTML的不严谨性，只需要存在开始标记HTML文件就可以被浏览器解析。</p><h2 id="2-头部标记"><a href="#2-头部标记" class="headerlink" title="2.头部标记"></a>2.头部标记</h2><p><code>&lt;head&gt;</code>和<code>&lt;/head&gt;</code>标签为头部标记，在它们之间的文本是头信息。头信息中主要包括页面的一些描述语句，以及引入CSS和JavaScript脚本。在头信息中的标签使用量小于文档主体标记中的标签使用量，主要用来说明文件标题和整体文件的公共属性。</p><h2 id="3-文档主体标记"><a href="#3-文档主体标记" class="headerlink" title="3.文档主体标记"></a>3.文档主体标记</h2><p><code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>标签为主体标记，在他们之间的文本用来放置页面中的显示内容。网页呈现出的文字、图片、超链接等等都要在这个标记中进行声明。我们学习的php语言也会嵌套在这个部分。而<code>&lt;body&gt;</code>标签也有自己的属性值，可以设置其标签属性控制整个页面的风格，例如：<br><code>&lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;red&quot;&gt;</code><br>以上代码设置了本页面的背景颜色为黑色，字体颜色为红色</p><ul><li>在HTML语言中，颜色即可以用英文单词表示，也可以使用RGB来表示</li></ul><h1 id="三、页面编辑"><a href="#三、页面编辑" class="headerlink" title="三、页面编辑"></a>三、页面编辑</h1><p>网页有多种多样的呈现方式，网页中也含有大量元素，本版块将对最基本的文字、图片以及链接的代码进行分析。同时，由于在HTML代码的编写中，经常运用到CSS样式，想要了解CSS样式可以参考以下链接中的CSS基础教程进行学习：<br><a href="https://www.w3school.com.cn/css/index.asp">CSS教程</a></p><h2 id="1-文字"><a href="#1-文字" class="headerlink" title="1.文字"></a>1.文字</h2><ul><li><p>格式标签<br>在上文中我们提到了格式标签，格式标签一般用于定义网页的布局，下图列举了常用的格式标签：<br><img src="https://i.loli.net/2021/09/22/jaDOkgtisJ4uGZ7.jpg" alt="图片来自《PHP学习手册》"></p></li><li><p>文本标签<br>文本标签用于强调或特殊说明一些文字，下图列举了常用的文本标签：<br><img src="https://i.loli.net/2021/09/22/3X8UnBI6xj5ZEgG.jpg" alt="图片来自《PHP学习手册》"><br><img src="https://i.loli.net/2021/09/22/JqPh3j8lr1ZFve2.jpg" alt="图片来自《PHP学习手册》"></p></li></ul><h2 id="2-图像"><a href="#2-图像" class="headerlink" title="2.图像"></a>2.图像</h2><p>我们常用到的图片格式一般为jpg、png和gif，这些格式的图片通过<code>&lt;img&gt;</code>标签插入到HTML文档中，格式如下：<br><code>&lt;img src=&quot;&quot; alt=&quot;&quot; width=&quot;&quot; height=&quot;&quot; bordre=&quot;&quot;</code></p><ul><li>src：需要指定一个包括URL路径名在内的图片文件</li><li>alt：定义一个字符串，当鼠标悬停图片上时输出该字符串</li><li>width：设置图像宽度，单位像素</li><li>height：设置图像高度，单位像素</li><li>border：设置相框的宽度，单位像素</li></ul><h2 id="3-链接"><a href="#3-链接" class="headerlink" title="3.链接"></a>3.链接</h2><p>网页中往往有链接之间的跳转，链接文档中的指定位置被称为锚点。在HTML语言中，<code>&lt;a&gt;</code>标签被用于定义锚点与超链接，语法格式如下：<br><code>&lt;a href=&quot;&quot; name=&quot;&quot; target=&quot;&quot;&gt;链接文字&lt;/a&gt;</code></p><ul><li>href：指定所链接位置的URL路径，绝对路径与相对路径均可</li><li>name：指定页面的锚点名称</li><li>target：指定打开链接所用的浏览器窗口名称，默认为在当前窗口打开</li></ul><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h2><p>在页面呈现中还有其他的形式，例如表格、表单等。本篇博客没有对其进行具体介绍，但我们也要对其具有阅读能力，尤其是在靶场中也经常使用的表格，我们可以参考下列链接进行HTML表格学习：<br><a href="https://www.w3school.com.cn/html/html_tables.asp">HTML表格教程</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>HTML主要被用来在web上发布信息以及完成简单布局，同时为了页面美观也会运用CSS。在学习php之前对web页面布局有过了解后，可以帮助我们更好地理解代码作用，使自己阅读代码没有障碍。<br>本文总结了常见的HTML语言语法，希望能够在之后的靶场练习中起到参考作用。</p><blockquote><h3 id="资料引用："><a href="#资料引用：" class="headerlink" title="资料引用："></a>资料引用：</h3><p>《PHP学习手册》 ——电子工业出版社</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、HTML语言语法&quot;&gt;&lt;a href=&quot;#一、HTML语言语法&quot; class=&quot;headerlink&quot; title=&quot;一、HTML语言语法&quot;&gt;&lt;/a&gt;一、HTML语言语法&lt;/h1&gt;&lt;h2 id=&quot;1-HTML中的语法基本&quot;&gt;&lt;a href=&quot;#1-HTML中的语法基本&quot; class=&quot;headerlink&quot; title=&quot;1.HTML中的语法基本&quot;&gt;&lt;/a&gt;1.HTML中的语法基本&lt;/h2&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="-web前端 -html" scheme="http://example.com/tags/web%E5%89%8D%E7%AB%AF-html/"/>
    
  </entry>
  
  <entry>
    <title>关于新手写博客时的常用md语法</title>
    <link href="http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E6%96%B0%E6%89%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6%E7%9A%84%E5%B8%B8%E7%94%A8md%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E6%96%B0%E6%89%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6%E7%9A%84%E5%B8%B8%E7%94%A8md%E8%AF%AD%E6%B3%95/</id>
    <published>2021-09-20T14:23:26.000Z</published>
    <updated>2021-09-22T13:29:37.868Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。</p></blockquote><h1 id="一、关于标题"><a href="#一、关于标题" class="headerlink" title="一、关于标题"></a>一、关于标题</h1><span id="more"></span><p>当我们需要在markdown编辑器中加入如上（一、关于标题）的大标题时，只需要在标题文字前加上“#”字键并空格。文字前最多可以加上6个“#”键，每加入一个“#”键，标题字号就会小一号，代码如下：<br><code># Title</code></p><p>6种标题效果展示：</p><h1 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h1><h2 id="Title-1"><a href="#Title-1" class="headerlink" title="Title"></a>Title</h2><h3 id="Title-2"><a href="#Title-2" class="headerlink" title="Title"></a>Title</h3><h4 id="Title-3"><a href="#Title-3" class="headerlink" title="Title"></a>Title</h4><h5 id="Title-4"><a href="#Title-4" class="headerlink" title="Title"></a>Title</h5><h6 id="Title-5"><a href="#Title-5" class="headerlink" title="Title"></a>Title</h6><h1 id="二、关于引用"><a href="#二、关于引用" class="headerlink" title="二、关于引用"></a>二、关于引用</h1><p>当我们需要对资料进行引用时，我们可以在引用资料前加入“&lt;“键表示对文字进行引用，当然引用中同样可以继续引用，事实上，引用中的文字同样支持md语法。下方代码举例：<br><code>&gt;word</code><br><code>&gt;&gt;word</code></p><h1 id="三、关于文字"><a href="#三、关于文字" class="headerlink" title="三、关于文字"></a>三、关于文字</h1><p>在markdown语法中同样有字体加粗，倾斜等效果，下方直接展示几种常用的字体效果：<br>###1.斜体<br><code>*word*</code><br><em>word</em></p><p>###2.加粗<br><code>**word**</code><br><strong>word</strong></p><p>###3.斜体加粗<br><code>***word***</code><br><em><strong>word</strong></em></p><p>注意：</p><ul><li>由于会和链接的默认样式产生混淆，markdown语法中无法直接为文字添加下划线，必须使用行内html解决该问题。</li><li>需要换行时需要在文字之间空一行。</li><li>如果需要分割线则在一个空行中输入三个或以上的“—”或“***”，效果如下：</li></ul><hr><h1 id="四、插入代码"><a href="#四、插入代码" class="headerlink" title="四、插入代码"></a>四、插入代码</h1><p>如果你想在你的博客中编辑一段如上文的代码行，利用好“`”字符，举例如下：<br>如果仅输入一行代码，在代码左右两边写上一个反引号：</p><p><img src="https://i.loli.net/2021/09/22/nJfxL3hlyI8HeTW.jpg" alt="例1"></p><p>如果想要输入代码块的话，在代码块的上一行与下一行写上三个反引号：</p><p><img src="https://i.loli.net/2021/09/22/QrgAcCpaSn3hUVk.jpg" alt="例2"></p><h1 id="五、插入列表"><a href="#五、插入列表" class="headerlink" title="五、插入列表"></a>五、插入列表</h1><p>如果想在自己的文字前加入一个加粗黑点，即无序列表（如下）</p><ul><li>例<br>则只需要在你的文字之前加入“*”键，“+”键或“-”键并空格，例如：<br><code>* 123</code><br><code>+ 123</code><br><code>- 123</code><br>如果需要一个有序列表，则在文字前依次输入“1. ”“2. ”等，例如：<br><code>1. a</code><br><code>2. b</code><br><code>3. c</code></li></ul><ol><li>a</li><li>b</li><li>c</li></ol><h1 id="六、插入图片"><a href="#六、插入图片" class="headerlink" title="六、插入图片"></a>六、插入图片</h1><p>在写博客时，利用图片进行说明的环节是必不可少的。在markdown语法中，插入图片的格式为：<br><code>![alt](图片地址 &quot;title&quot;)</code><br>其中alt是在图片下方加入的文字注释，图片地址指的是图片在网络上的地址，因此推荐使用图床上传照片。而title是图片的标题，这部分可省略。<br>例如上文“插入代码”中的图片语法如下：<br><code>![例1](http://a1.qpic.cn/psc?/V11wVkh94am2Ju/05RlWl8gsTOH*Z17MtCBzHtFtpA*CeMm5FipmaRi.dnX*JxpHe14OqWyfguXnCP3JwMhlxlKCVqeswVw7*6gPA!!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=XQAiAF0AIgARADc!&amp;tl=1&amp;tm=1632150000&amp;sce=0-12-12&amp;rf=0-18.jpg)</code></p><h1 id="七、插入外链"><a href="#七、插入外链" class="headerlink" title="七、插入外链"></a>七、插入外链</h1><p>外链即超链接，语法形式与插入图片较为相似：<br><code>[name](链接地址 &quot;title&quot;)</code><br>其中的name指超链接的显示名称，链接地址即为网址域名，而同样title指的超链接标题，可写可不写，例如：<br><code>[百度](www.baidu.com)</code><br><a href="www.baidu.com">百度</a></p><h1 id="八、插入表格"><a href="#八、插入表格" class="headerlink" title="八、插入表格"></a>八、插入表格</h1><p>最后要介绍的是表格，表格在一些情况下也是不可或缺的。在markdown语法中，使用“|”来分隔不同的单元格，使用“-”来分隔表头和其他行，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|---|---|</span><br><span class="line">|文字|文字|文字|</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>文字</td><td>文字</td><td>文字</td></tr></tbody></table><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>以上便是我整理的关于使用md语法编写时的常用语法内容，同时这也是我第一次使用md语法进行文本编辑，希望今后我们能熟练掌握更深层次的md语法，让自己的写博客能力更上一层楼。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、关于标题&quot;&gt;&lt;a href=&quot;#一、关于标题&quot; class=&quot;headerlink&quot; title=&quot;一、关于标题&quot;&gt;&lt;/a&gt;一、关于标题&lt;/h1&gt;</summary>
    
    
    
    <category term="other" scheme="http://example.com/categories/other/"/>
    
    
    <category term="-markdown -hexo" scheme="http://example.com/tags/markdown-hexo/"/>
    
  </entry>
  
</feed>
