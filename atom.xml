<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mrl64&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-22T12:38:03.363Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>liszt_lin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML基础学习</title>
    <link href="http://example.com/2021/09/22/HTML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/09/22/HTML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-09-22T09:24:52.000Z</published>
    <updated>2021-09-22T12:38:03.363Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。</p></blockquote><h1 id="一、HTML语言语法"><a href="#一、HTML语言语法" class="headerlink" title="一、HTML语言语法"></a>一、HTML语言语法</h1><h2 id="1-HTML中的语法基本"><a href="#1-HTML中的语法基本" class="headerlink" title="1.HTML中的语法基本"></a>1.HTML中的语法基本</h2><span id="more"></span> <ul><li><p>HTML文件中是以标签对或标签来标记网页结构和显示资料内容的。标签对开始表现为<code>&lt;xxx&gt;</code>,标签结束表现为<code>&lt;/xxx&gt;</code>，其中还有一些标签不需要结束标签，例如<code>&lt;br&gt;</code>和<code>&lt;p&gt;</code>等，这些标签被称为空标签。</p></li><li><p>而HTML标签也是具有属性的，属性是为HTML元素所提供的说明信息。HTML的属性无先后次序之分，并且属性设置是可选的，如果不进行属性设置的话属性将会以默认值的形式被调用。下例是img图像标签格式：<br><code>&lt;img src=&quot;http://www.baidu.com/img/baidu.gif&quot; height=&quot;200&quot; width=&quot;100&quot; /&gt;</code><br>在上述语句中，src为路径，height为高度，width为宽度</p></li><li><p>在HTML的语法中，HTML标签名和属性都不区分大小写字母，因此，<code>&lt;br&gt;</code>和<code>&lt;BR&gt;</code>还有<code>&lt;Br&gt;</code>三者无任何区别。</p></li><li><p>HTML源代码中的回车与空格都不会在HTML页面中体现，因此我们需要应用格式标签进行文字排版。</p></li></ul><h2 id="2-HTML注释"><a href="#2-HTML注释" class="headerlink" title="2.HTML注释"></a>2.HTML注释</h2><p>和所有的编程语言一样，注释不影响代码的运行，善于使用注释也是作为一个程序员应该养成的良好习惯。在HTML语言中，注释的方式比起我们常见的c语言较为特别，注释以<code>&lt;!--</code>开始，以<code>--&gt;</code>结束,举例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;!--注释信息1--&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;!--注释信息2--&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="3-HTML字符实体"><a href="#3-HTML字符实体" class="headerlink" title="3.HTML字符实体"></a>3.HTML字符实体</h2><p>有些字符串在HTML语言中具有特殊含义，比如标签中用到的”&lt;””&gt;”等等，这些字符串在HTML中就不可直接输出。而为了输出这些字符串，我们就需要应用字符实体来表示这些字符串.字符实体由”&amp;”、实体名称和”;”构成，以下列出一些常见的实体名称，在使用时要记得在其左右两边加上”&amp;”和”;”：</p><table><thead><tr><th>实体名称</th><th>输出字符串</th></tr></thead><tbody><tr><td>nbsp</td><td>空格</td></tr><tr><td>amp</td><td>&amp;</td></tr><tr><td>lt</td><td>&lt;</td></tr><tr><td>gt</td><td>&gt;</td></tr><tr><td>quot</td><td>“</td></tr></tbody></table><h1 id="二、HTML文件结构"><a href="#二、HTML文件结构" class="headerlink" title="二、HTML文件结构"></a>二、HTML文件结构</h1><p>正如编写C语言时一定需要一个主函数一样，编写HTML时也需要几个全局架构标签，这些标签将HTML代码分为了三个部分进行编写，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>三个标签对分别为最外层标签，头部标记和文档主体标记，不同的部分起到了不同的作用，接下来我们分别介绍这三个部分。</p><h2 id="1-最外层标签"><a href="#1-最外层标签" class="headerlink" title="1.最外层标签"></a>1.最外层标签</h2><p><code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>就是最外层标签，主要作用是告诉浏览器这个HTML文件的开始点与结束点。而由于HTML的不严谨性，只需要存在开始标记HTML文件就可以被浏览器解析。</p><h2 id="2-头部标记"><a href="#2-头部标记" class="headerlink" title="2.头部标记"></a>2.头部标记</h2><p><code>&lt;head&gt;</code>和<code>&lt;/head&gt;</code>标签为头部标记，在它们之间的文本是头信息。头信息中主要包括页面的一些描述语句，以及引入CSS和JavaScript脚本。在头信息中的标签使用量小于文档主体标记中的标签使用量，主要用来说明文件标题和整体文件的公共属性。</p><h2 id="3-文档主体标记"><a href="#3-文档主体标记" class="headerlink" title="3.文档主体标记"></a>3.文档主体标记</h2><p><code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>标签为主体标记，在他们之间的文本用来放置页面中的显示内容。网页呈现出的文字、图片、超链接等等都要在这个标记中进行声明。我们学习的php语言也会嵌套在这个部分。而<code>&lt;body&gt;</code>标签也有自己的属性值，可以设置其标签属性控制整个页面的风格，例如：<br><code>&lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;red&quot;&gt;</code><br>以上代码设置了本页面的背景颜色为黑色，字体颜色为红色</p><ul><li>在HTML语言中，颜色即可以用英文单词表示，也可以使用RGB来表示</li></ul><h1 id="三、页面编辑"><a href="#三、页面编辑" class="headerlink" title="三、页面编辑"></a>三、页面编辑</h1><p>网页有多种多样的呈现方式，网页中也含有大量元素，本版块将对最基本的文字、图片以及链接的代码进行分析。同时，由于在HTML代码的编写中，经常运用到CSS样式，想要了解CSS样式可以参考以下链接中的CSS基础教程进行学习：<br><a href="https://www.w3school.com.cn/css/index.asp">CSS教程</a></p><h2 id="1-文字"><a href="#1-文字" class="headerlink" title="1.文字"></a>1.文字</h2><ul><li><p>格式标签<br>在上文中我们提到了格式标签，格式标签一般用于定义网页的布局，下图列举了常用的格式标签：<br><img src="https://i.loli.net/2021/09/22/jaDOkgtisJ4uGZ7.jpg" alt="图片来自《PHP学习手册》"></p></li><li><p>文本标签<br>文本标签用于强调或特殊说明一些文字，下图列举了常用的文本标签：<br><img src="https://i.loli.net/2021/09/22/3X8UnBI6xj5ZEgG.jpg" alt="图片来自《PHP学习手册》"><br><img src="https://i.loli.net/2021/09/22/JqPh3j8lr1ZFve2.jpg" alt="图片来自《PHP学习手册》"></p></li></ul><h2 id="2-图像"><a href="#2-图像" class="headerlink" title="2.图像"></a>2.图像</h2><p>我们常用到的图片格式一般为jpg、png和gif，这些格式的图片通过<code>&lt;img&gt;</code>标签插入到HTML文档中，格式如下：<br><code>&lt;img src=&quot;&quot; alt=&quot;&quot; width=&quot;&quot; height=&quot;&quot; bordre=&quot;&quot;</code></p><ul><li>src：需要指定一个包括URL路径名在内的图片文件</li><li>alt：定义一个字符串，当鼠标悬停图片上时输出该字符串</li><li>width：设置图像宽度，单位像素</li><li>height：设置图像高度，单位像素</li><li>border：设置相框的宽度，单位像素</li></ul><h2 id="3-链接"><a href="#3-链接" class="headerlink" title="3.链接"></a>3.链接</h2><p>网页中往往有链接之间的跳转，链接文档中的指定位置被称为锚点。在HTML语言中，<code>&lt;a&gt;</code>标签被用于定义锚点与超链接，语法格式如下：<br><code>&lt;a href=&quot;&quot; name=&quot;&quot; target=&quot;&quot;&gt;链接文字&lt;/a&gt;</code></p><ul><li>href：指定所链接位置的URL路径，绝对路径与相对路径均可</li><li>name：指定页面的锚点名称</li><li>target：指定打开链接所用的浏览器窗口名称，默认为在当前窗口打开</li></ul><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h2><p>在页面呈现中还有其他的形式，例如表格、表单等。本篇博客没有对其进行具体介绍，但我们也要对其具有阅读能力，尤其是在靶场中也经常使用的表格，我们可以参考下列链接进行HTML表格学习：<br><a href="https://www.w3school.com.cn/html/html_tables.asp">HTML表格教程</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>HTML主要被用来在web上发布信息以及完成简单布局，同时为了页面美观也会运用CSS。在学习php之前对web页面布局有过了解后，可以帮助我们更好地理解代码作用，使自己阅读代码没有障碍。<br>本文总结了常见的HTML语言语法，希望能够在之后的靶场练习中起到参考作用。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由于php语言常常被嵌套在HTML中用于实现动态页面，所以在进行网页源代码阅读时我们往往能看到HTML语言。在学习php之前，先学习HTML基础，可以更好的帮助我们了解网页的布局，也能使我们阅读代码时更好的理解代码含义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、HTML语言语法&quot;&gt;&lt;a href=&quot;#一、HTML语言语法&quot; class=&quot;headerlink&quot; title=&quot;一、HTML语言语法&quot;&gt;&lt;/a&gt;一、HTML语言语法&lt;/h1&gt;&lt;h2 id=&quot;1-HTML中的语法基本&quot;&gt;&lt;a href=&quot;#1-HTML中的语法基本&quot; class=&quot;headerlink&quot; title=&quot;1.HTML中的语法基本&quot;&gt;&lt;/a&gt;1.HTML中的语法基本&lt;/h2&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="-web前端 -html" scheme="http://example.com/tags/web%E5%89%8D%E7%AB%AF-html/"/>
    
  </entry>
  
  <entry>
    <title>关于新手写博客时的常用md语法</title>
    <link href="http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E6%96%B0%E6%89%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6%E7%9A%84%E5%B8%B8%E7%94%A8md%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E6%96%B0%E6%89%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6%E7%9A%84%E5%B8%B8%E7%94%A8md%E8%AF%AD%E6%B3%95/</id>
    <published>2021-09-20T14:23:26.000Z</published>
    <updated>2021-09-22T09:25:26.814Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。</p></blockquote><h1 id="一、关于标题"><a href="#一、关于标题" class="headerlink" title="一、关于标题"></a>一、关于标题</h1><span id="more"></span><p>当我们需要在markdown编辑器中加入如上（一、关于标题）的大标题时，只需要在标题文字前加上“#”字键并空格。文字前最多可以加上6个“#”键，每加入一个“#”键，标题字号就会小一号，代码如下：<br><code># Title</code></p><p>6种标题效果展示：</p><h1 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h1><h2 id="Title-1"><a href="#Title-1" class="headerlink" title="Title"></a>Title</h2><h3 id="Title-2"><a href="#Title-2" class="headerlink" title="Title"></a>Title</h3><h4 id="Title-3"><a href="#Title-3" class="headerlink" title="Title"></a>Title</h4><h5 id="Title-4"><a href="#Title-4" class="headerlink" title="Title"></a>Title</h5><h6 id="Title-5"><a href="#Title-5" class="headerlink" title="Title"></a>Title</h6><h1 id="二、关于引用"><a href="#二、关于引用" class="headerlink" title="二、关于引用"></a>二、关于引用</h1><p>当我们需要对资料进行引用时，我们可以在引用资料前加入“&lt;“键表示对文字进行引用，当然引用中同样可以继续引用，事实上，引用中的文字同样支持md语法。下方代码举例：<br><code>&gt;word</code><br><code>&gt;&gt;word</code></p><h1 id="三、关于文字"><a href="#三、关于文字" class="headerlink" title="三、关于文字"></a>三、关于文字</h1><p>在markdown语法中同样有字体加粗，倾斜等效果，下方直接展示几种常用的字体效果：<br>###1.斜体<br><code>*word*</code><br><em>word</em></p><p>###2.加粗<br><code>**word**</code><br><strong>word</strong></p><p>###3.斜体加粗<br><code>***word***</code><br><em><strong>word</strong></em></p><p>注意：</p><ul><li>由于会和链接的默认样式产生混淆，markdown语法中无法直接为文字添加下划线，必须使用行内html解决该问题。</li><li>需要换行时需要在文字之间空一行。</li><li>如果需要分割线则在一个空行中输入三个或以上的“—”或“***”，效果如下：</li></ul><hr><h1 id="四、插入代码"><a href="#四、插入代码" class="headerlink" title="四、插入代码"></a>四、插入代码</h1><p>如果你想在你的博客中编辑一段如上文的代码行，利用好“`”字符，举例如下：<br>如果仅输入一行代码，在代码左右两边写上一个反引号：</p><p><img src="http://a1.qpic.cn/psc?/V11wVkh94am2Ju/05RlWl8gsTOH*Z17MtCBzHtFtpA*CeMm5FipmaRi.dnX*JxpHe14OqWyfguXnCP3JwMhlxlKCVqeswVw7*6gPA!!/c&ek=1&kp=1&pt=0&bo=XQAiAF0AIgARADc!&tl=1&tm=1632150000&sce=0-12-12&rf=0-18.jpg" alt="例1"></p><p>如果想要输入代码块的话，在代码块的上一行与下一行写上三个反引号：</p><p><img src="http://a1.qpic.cn/psc?/V11wVkh94am2Ju/05RlWl8gsTOH*Z17MtCBzM7OR334jRtvr2oeQriBFb6f85aqxK85JyAEk.s1KV.8HqGAardhTWtl32Fx.6Oo2A!!/c&ek=1&kp=1&pt=0&bo=WQB.AFkAfgARADc!&tl=1&tm=1632150000&sce=0-12-12&rf=0-18.jpg" alt="例2"></p><h1 id="五、插入列表"><a href="#五、插入列表" class="headerlink" title="五、插入列表"></a>五、插入列表</h1><p>如果想在自己的文字前加入一个加粗黑点，即无序列表（如下）</p><ul><li>例<br>则只需要在你的文字之前加入“*”键，“+”键或“-”键并空格，例如：<br><code>* 123</code><br><code>+ 123</code><br><code>- 123</code><br>如果需要一个有序列表，则在文字前依次输入“1. ”“2. ”等，例如：<br><code>1. a</code><br><code>2. b</code><br><code>3. c</code></li></ul><ol><li>a</li><li>b</li><li>c</li></ol><h1 id="六、插入图片"><a href="#六、插入图片" class="headerlink" title="六、插入图片"></a>六、插入图片</h1><p>在写博客时，利用图片进行说明的环节是必不可少的。在markdown语法中，插入图片的格式为：<br><code>![alt](图片地址 &quot;title&quot;)</code><br>其中alt是在图片下方加入的文字注释，图片地址指的是图片在网络上的地址，因此推荐使用图床上传照片。而title是图片的标题，这部分可省略。<br>例如上文“插入代码”中的图片语法如下：<br><code>![例1](http://a1.qpic.cn/psc?/V11wVkh94am2Ju/05RlWl8gsTOH*Z17MtCBzHtFtpA*CeMm5FipmaRi.dnX*JxpHe14OqWyfguXnCP3JwMhlxlKCVqeswVw7*6gPA!!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=XQAiAF0AIgARADc!&amp;tl=1&amp;tm=1632150000&amp;sce=0-12-12&amp;rf=0-18.jpg)</code></p><h1 id="七、插入外链"><a href="#七、插入外链" class="headerlink" title="七、插入外链"></a>七、插入外链</h1><p>外链即超链接，语法形式与插入图片较为相似：<br><code>[name](链接地址 &quot;title&quot;)</code><br>其中的name指超链接的显示名称，链接地址即为网址域名，而同样title指的超链接标题，可写可不写，例如：<br><code>[百度](www.baidu.com)</code><br><a href="www.baidu.com">百度</a></p><h1 id="八、插入表格"><a href="#八、插入表格" class="headerlink" title="八、插入表格"></a>八、插入表格</h1><p>最后要介绍的是表格，表格在一些情况下也是不可或缺的。在markdown语法中，使用“|”来分隔不同的单元格，使用“-”来分隔表头和其他行，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|---|---|</span><br><span class="line">|文字|文字|文字|</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>文字</td><td>文字</td><td>文字</td></tr></tbody></table><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>以上便是我整理的关于使用md语法编写时的常用语法内容，同时这也是我第一次使用md语法进行文本编辑，希望今后我们能熟练掌握更深层次的md语法，让自己的写博客能力更上一层楼。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;当我们搭建完github+hexo的博客进入实验室后，我们所要面对的第一个问题便是如何用markdown语法写下自己的第一篇博客。我在阅读学习markdown语法与一些网上教程说明后，总结了一些常用markdown语法供参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、关于标题&quot;&gt;&lt;a href=&quot;#一、关于标题&quot; class=&quot;headerlink&quot; title=&quot;一、关于标题&quot;&gt;&lt;/a&gt;一、关于标题&lt;/h1&gt;</summary>
    
    
    
    <category term="other" scheme="http://example.com/categories/other/"/>
    
    
    <category term="-markdown -hexo" scheme="http://example.com/tags/markdown-hexo/"/>
    
  </entry>
  
  <entry>
    <title>test_my_site</title>
    <link href="http://example.com/2021/09/17/test_my_site/"/>
    <id>http://example.com/2021/09/17/test_my_site/</id>
    <published>2021-09-17T12:17:52.000Z</published>
    <updated>2021-09-17T12:17:52.641Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/09/17/hello-world/"/>
    <id>http://example.com/2021/09/17/hello-world/</id>
    <published>2021-09-17T11:35:34.310Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
